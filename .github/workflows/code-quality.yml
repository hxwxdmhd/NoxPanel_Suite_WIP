name: Code Quality Checks

on:
  push:
    branches: [ main, develop, 'engine/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r NoxPanel/requirements.txt
        pip install black isort flake8 mypy safety bandit
    
    - name: Run comprehensive code analysis
      run: |
        python run_code_analysis.py --only-active --format json --output analysis-results.json
    
    - name: Check for critical issues
      run: |
        python -c "
        import json
        with open('analysis-results.json') as f:
            data = json.load(f)
        critical = data['summary']['severities'].get('critical', 0)
        if critical > 0:
            print(f'❌ Found {critical} critical issues')
            exit(1)
        else:
            print('✅ No critical issues found')
        "
    
    - name: Format check with Black
      run: black --check --diff .
      continue-on-error: true
    
    - name: Import sorting check
      run: isort --check-only --diff .
      continue-on-error: true
    
    - name: Lint with flake8
      run: flake8 --max-line-length=88 --extend-ignore=E203,W503 .
      continue-on-error: true
    
    - name: Security check with Bandit
      run: bandit -r NoxPanel/ -f json -o bandit-results.json
      continue-on-error: true
    
    - name: Dependency security check
      run: safety check --json --output safety-results.json
      continue-on-error: true
    
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: code-quality-results
        path: |
          analysis-results.json
          bandit-results.json
          safety-results.json

  docker-build:
    runs-on: ubuntu-latest
    needs: code-analysis
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t noxpanel:test .
    
    - name: Test Docker container
      run: |
        docker run --rm -d --name noxpanel-test -p 5000:5000 noxpanel:test
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        docker stop noxpanel-test
